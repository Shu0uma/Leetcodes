class Solution(object):
    def numTilings(self, N):
        """
        :type N: int
        :rtype: int
        """
        M = int(1e9+1)
        
        def matrix_expo(A, K):
            if K == 0:
                return [[int(i==j) for j in xrange(len(A))] \
                    for i in xrange(len(A))]
            if K == 1:
                return A
            if K % 2:
                return matrix_mult(matrix_expo(A, K-1), A)
            B = matrix_expo(A, K//2)
            return matrix_mult(B, B)
        
        def matrix_mult(A, B):
            ZB = zip(*B)
            return [[sum(a*b for a, b in itertools.izip(row, col)) % M \
                    for col in ZB] for row in A]
        
        T = [[1, 0, 0, 1],
             [1, 0, 1, 0],
             [1, 1, 0, 0],
             [1, 1, 1, 0]]
        return matrix_expo(T, N)[0][0]
